import unittest

from entrypoint import dokerfile


def read_test_file(file: str) -> str:
    file_contents = ""
    with open(file, "r") as f:
        file_contents = f.read()
    return file_contents


class TestDockerfileChecks(unittest.TestCase):

    def test_is_inspector_cyclonedx_scan_positive(self):
        test_file = "test_data/artifacts/containers/dockerfile_checks/inspector-scan-cdx.json"
        inspector_scan_json = read_test_file(test_file)

        want = True
        got = dokerfile.is_inspector_cyclonedx_scan(inspector_scan_json)
        self.assertEqual(want, got)

    def test_is_inspector_cyclonedx_scan_negative(self):
        test_file = "test_data/artifacts/containers/dockerfile_checks/inspector-scan.json"
        inspector_scan_json = read_test_file(test_file)
        got = dokerfile.is_inspector_cyclonedx_scan(inspector_scan_json)
        want = False
        self.assertEqual(want, got)

    def test_is_cyclonedx_json_v1_5_positive(self):
        test_file = "test_data/artifacts/containers/dockerfile_checks/inspector-scan-cdx.json"
        inspector_scan_json = read_test_file(test_file)
        got = dokerfile.is_cyclonedx_json_v1_5(inspector_scan_json)
        want = True
        self.assertEqual(want, got)

    def test_is_cyclonedx_json_v1_5_negative(self):
        test_file = "test_data/artifacts/containers/dockerfile_checks/inspector-scan.json"
        inspector_scan_json = read_test_file(test_file)
        got = dokerfile.is_cyclonedx_json_v1_5(inspector_scan_json)
        want = False
        self.assertEqual(want, got)


if __name__ == '__main__':
    unittest.main()
