def vulns_to_obj(inspector_scan_json):
    vuln_list = []

    scan_contents = inspector_scan_json.get("sbom")
    if not scan_contents:
        return None

    vulns = scan_contents.get("vulnerabilities")
    if not vulns:
        return None

    for v in vulns:

        vuln = {
            "Vulnerability ID": "null",
            "Severity": "null",
            "Published": "null",
            "Modified": "null",
            "Description": "null",
            "EPSS Score": "null",
        }

        # get vuln ID
        id = v.get("id")
        vuln["Vulnerability ID"] = id if id is not None else "null"

        # get vuln severity
        ratings = v.get("ratings")
        if ratings:
            for rating in ratings:
                source = rating.get("source")
                if not source:
                    continue

                if source["name"] == "NVD":
                    severity = rating["severity"]
                    vuln["Severity"] = severity if severity is not None else "null"

                elif source["name"] == "EPSS":
                    epss_score = rating["score"]
                    if epss_score:
                        vuln["EPSS Score"] = epss_score
                else:
                    continue

        # get vulnerability published date
        published = v.get("created")
        vuln["Published"] = published if published is not None else "null"

        # get vulnerability modified date
        modified = v.get("updated")
        vuln["Modified"] = modified if modified is not None else "null"

        # get vulnerability description
        description = v.get("description")
        vuln["Description"] = description if description is not None else "null"

        # get installed package
        # TODO

        # get fixed package
        # TODO

        # get EPSS score

        vuln_list.append(vuln)

    """

            get id
            get severity (critical, high, medium, etc.)
            get created
            get description
            get modified



    """
    return vuln_list
